name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master
env:
  APP_PORT: 8080 # TODO: port running
  PROJECT_ID: sistem-informasi-konveksi # TODO: update Google Cloud project id
  GAR_LOCATION: asia-southeast2 # TODO: update Artifact Registry location
  REPOSITORY: registry-sistem-informasi-konveksi # TODO: update Artifact Registry repository name
  SERVICE: go-sistem-informasi-konveksi # TODO: update Cloud Run service name
  REGION: asia-southeast2 # TODO: update Cloud Run service region
  ENVIRONMENT: PRODUCTION # TODO: update Environment Application (PRODUCTION/DEVELOPMENT)
  VERSION_SECRET_MANAGER: 1 # TODO: update Version Secret Manager

jobs:

  build-deploy-gcloud:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and Push to Registry
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ steps.vars.outputs.sha_short }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ steps.vars.outputs.sha_short }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.GAR_LOCATION }}
          flags: "--allow-unauthenticated --set-secrets=DB_USERNAME=DB_USERNAME:${{ env.VERSION_SECRET_MANAGER }},\
            DB_PASWORD=DB_PASWORD:${{ env.VERSION_SECRET_MANAGER }},\
            DB_PORT=DB_PORT:${{ env.VERSION_SECRET_MANAGER }},\
            DB_HOST=DB_HOST:${{ env.VERSION_SECRET_MANAGER }},\
            DB_NAME=DB_NAME:${{ env.VERSION_SECRET_MANAGER }},\
            JWT_TOKEN=JWT_TOKEN:${{ env.VERSION_SECRET_MANAGER }},\
            JWT_REFTOKEN=JWT_REFTOKEN:${{ env.VERSION_SECRET_MANAGER }}"
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ steps.vars.outputs.sha_short }}
          # NOTE: You can also set env variables here:
          env_vars: |
            ENVIRONMENT=${{ env.ENVIRONMENT }}
            PROJECT_ID=${{ env.PROJECT_ID }}
            APP_PORT=${{ env.APP_PORT }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
